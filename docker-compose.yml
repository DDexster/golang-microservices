version: '3'

services:
  caddy:
    #    image: 'dmbondarenko/udemy-caddy-microservice'
    build:
      context: ./caddy
      dockerfile: ./caddy.dockerfile
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy_data:/data
      - ./caddy_config:/config

  front-end:
    #    image: 'dmbondarenko/udemy-front-microservice'
    build:
      context: ./front-end
      dockerfile: ./front-end.dockerfile
    #    ports:
    #      - "80:8081"
    environment:
      BROKER_URL: "http://backend"

  broker-service:
    #    image: 'dmbondarenko/udemy-broker-microservice'
    build:
      context: ./broker-service
      dockerfile: ./broker-service.dockerfile
    restart: always
    #    ports:
    #      - "4000:8080"
    deploy:
      mode: replicated
      replicas: 1

  auth-service:
    #    image: 'dmbondarenko/udemy-listener-microservice'
    build:
      context: ./auth-service
      dockerfile: ./auth-service.dockerfile
    restart: always
    #    ports:
    #      - "6000:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  log-service:
    #    image: 'dmbondarenko/udemy-logs-microservice'
    build:
      context: ./log-service
      dockerfile: ./log-service.dockerfile
    restart: always
    #    ports:
    #      - "5000:8080"
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    #    image: 'dmbondarenko/udemy-mail-microservice'
    build:
      context: ./mail-service
      dockerfile: ./mail-service.dockerfile
    restart: always
    #    ports:
    #      - "7000:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_PORT: 1025
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      MAIL_FROM_NAME: "Dex Bond"
      MAIL_FROM_ADDRESS: "dima@cabdo.de"

  listener-service:
    #    image: 'dmbondarenko/udemy-listener-microservice'
    build:
      context: ./listener-service
      dockerfile: ./listener-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5437:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27018:27017"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"