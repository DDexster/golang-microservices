version: '3'

services:

  broker-service:
    build:
      context: ./broker-service
      dockerfile: ./broker-service.dockerfile
    restart: always
    ports:
      - "4000:8080"
    deploy:
      mode: replicated
      replicas: 1

  auth-service:
    build:
      context: ./auth-service
      dockerfile: ./auth-service.dockerfile
    restart: always
    ports:
      - "6000:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  log-service:
    build:
      context: ./log-service
      dockerfile: ./log-service.dockerfile
    restart: always
    ports:
      - "5000:8080"
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    build:
      context: ./mail-service
      dockerfile: ./mail-service.dockerfile
    restart: always
    ports:
      - "7000:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_PORT: 1025
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      MAIL_FROM_NAME: "Dex Bond"
      MAIL_FROM_ADDRESS: "dex@cabdo.de"

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5437:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27018:27017"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"